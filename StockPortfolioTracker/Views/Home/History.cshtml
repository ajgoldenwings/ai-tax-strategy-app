@model IEnumerable<StockPortfolioTracker.Services.PortfolioHolding>

@{
    ViewData["Title"] = "Portfolio History";
    var selectedDate = ViewBag.SelectedDate as DateTime? ?? DateTime.Today;
    var formattedDate = ViewBag.FormattedDate as string ?? DateTime.Today.ToString("yyyy-MM-dd");
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Portfolio History</h2>
                <a href="@Url.Action("Index", "Home")" class="btn btn-outline-primary">
                    <i class="fas fa-arrow-left me-1"></i>Back to Current Portfolio
                </a>
            </div>



            <!-- Date Selection Card -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Select Date</h5>
                </div>
                <div class="card-body">
                    <form method="get" action="@Url.Action("History", "Home")" class="row g-3 align-items-end">
                        <div class="col-md-6 col-lg-4">
                            <label for="date" class="form-label">Portfolio Date</label>
                            <input type="date" 
                                   class="form-control" 
                                   id="date" 
                                   name="date" 
                                   value="@formattedDate"
                                   max="@DateTime.Today.ToString("yyyy-MM-dd")"
                                   required>
                            <div class="form-text">Select a date to view your portfolio holdings as of that date.</div>
                        </div>
                        <div class="col-md-6 col-lg-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search me-1"></i>View Portfolio
                            </button>
                            <a href="@Url.Action("History", "Home")" class="btn btn-outline-secondary ms-2">
                                Today
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Portfolio Holdings Card -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        Portfolio Holdings as of @selectedDate.ToString("MMMM dd, yyyy")
                    </h5>
                    <span class="badge bg-info">@Model.Count() Holdings</span>
                </div>
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th scope="col">Stock Symbol</th>
                                        <th scope="col" class="text-end">Quantity</th>
                                        <th scope="col" class="text-end">Avg Cost Basis</th>
                                        <th scope="col" class="text-end">Total Value</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        decimal totalPortfolioValue = 0;
                                    }
                                    @foreach (var holding in Model.OrderBy(h => h.StockSymbol))
                                    {
                                        totalPortfolioValue += holding.TotalValue;
                                        <tr>
                                            <td>
                                                <strong class="text-primary">@holding.StockSymbol</strong>
                                            </td>
                                            <td class="text-end">
                                                <span class="badge bg-light text-dark">@holding.Quantity.ToString("N2")</span>
                                            </td>
                                            <td class="text-end">
                                                @holding.AverageCostBasis.ToString("C2")
                                            </td>
                                            <td class="text-end">
                                                <strong>@holding.TotalValue.ToString("C2")</strong>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <th scope="row" colspan="3" class="text-end">Total Portfolio Value:</th>
                                        <th class="text-end">
                                            <strong class="text-success">@totalPortfolioValue.ToString("C2")</strong>
                                        </th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="mb-3">
                                <i class="fas fa-chart-line fa-3x text-muted"></i>
                            </div>
                            <h5 class="text-muted">No Holdings Found</h5>
                            <p class="text-muted mb-4">
                                @if (selectedDate < DateTime.Today)
                                {
                                    <span>You had no stock holdings on @selectedDate.ToString("MMMM dd, yyyy").</span>
                                }
                                else
                                {
                                    <span>You currently have no stock holdings.</span>
                                }
                            </p>
                            <div class="d-flex justify-content-center gap-2">
                                <a href="@Url.Action("Create", "Trades")" class="btn btn-primary">
                                    <i class="fas fa-plus me-1"></i>Add Your First Trade
                                </a>
                                <a href="@Url.Action("Index", "Trades")" class="btn btn-outline-secondary">
                                    <i class="fas fa-list me-1"></i>View All Trades
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>

            @if (Model.Any())
            {
                <!-- Quick Actions Card -->
                <div class="card mt-4">
                    <div class="card-body">
                        <h6 class="card-title">Quick Actions</h6>
                        <div class="d-flex flex-wrap gap-2">
                            <a href="@Url.Action("Create", "Trades")" class="btn btn-sm btn-outline-primary">
                                <i class="fas fa-plus me-1"></i>Add New Trade
                            </a>
                            <a href="@Url.Action("Index", "Trades")" class="btn btn-sm btn-outline-secondary">
                                <i class="fas fa-list me-1"></i>View All Trades
                            </a>
                            <a href="@Url.Action("Index", "Home")" class="btn btn-sm btn-outline-info">
                                <i class="fas fa-home me-1"></i>Current Portfolio
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set max date to today to prevent future date selection
        document.addEventListener('DOMContentLoaded', function() {
            const dateInput = document.getElementById('date');
            if (dateInput) {
                const today = new Date().toISOString().split('T')[0];
                dateInput.setAttribute('max', today);
            }
        });
    </script>
}